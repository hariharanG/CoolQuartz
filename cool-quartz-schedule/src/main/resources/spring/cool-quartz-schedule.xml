<?xml version="1.0" encoding="utf-8" ?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd ">

	<context:property-placeholder location="classpath:application.properties" />
	<context:annotation-config></context:annotation-config>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />	
		<property name="password" value="${db.password}"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<jdbc:initialize-database ignore-failures="DROPS">
		<jdbc:script location="classpath:quartz-tables-mysql.sql"/>
		<!-- <jdbc:script location="classpath:quartz-jobs-history.sql" /> -->		
	</jdbc:initialize-database>
	
	<!-- job -->
	<bean id="batchReportJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="cool.job.BatchReportJob" />
		<property name="durability" value="true" />
		<property name="group" value="REPORT" />
	</bean>
	
	<!-- job -->
	<bean id="rerunJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="cool.job.RerunJob" />
		<property name="durability" value="true" />
		<property name="group" value="REPORT" />
	</bean>
	
	<!-- job -->
	<bean id="lowPaymentJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="cool.job.PaymentJob" />
		<property name="durability" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="paymentType" value="lowValue" />
			</map>
		</property>
		<property name="group" value="PAYMENT" />
	</bean>
	
	<!-- job -->
	<bean id="highPaymentJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="cool.job.PaymentJob" />
		<property name="durability" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="paymentType" value="highValue" />
			</map>
		</property>
		<property name="group" value="PAYMENT" />
	</bean>
	
	<!-- scheduler -->
	<bean id="reportScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="classpath:quartz.properties" />
		<property name="dataSource" ref="dataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="taskExecutor">
			<bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
				<property name="threadNamePrefix" value="ReportScheduler-" />
				<property name="corePoolSize" value="2" />
				<property name="maxPoolSize" value="5" />
				<property name="queueCapacity" value="300" />
				<property name="rejectedExecutionHandler" >
					<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
				</property>
			</bean>
		</property>	
		<property name="triggers">
			<array>
				<bean id="batchReportJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="batchReportJob" />
					<property name="cronExpression" value="0 0/5 * * * ?" />
					<property name="startDelay" value="2000" />					
					<property name="group" value="REPORT" />
				</bean>
				<bean id="rerunJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="rerunJob" />
					<property name="cronExpression" value="0 0/5 * * * ?" />
					<property name="startDelay" value="2000" />
					<property name="group" value="REPORT" />
				</bean>
			</array>		
		</property>
	</bean>
	
	<bean id="paymentScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="classpath:quartz.properties" />
		<property name="dataSource" ref="dataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="taskExecutor">
			<bean class="org.springframework.scheduling.concurrent,ThreadPoolExecutorFactoryBean">
				<property name="threadNamePrefix" value="PaymentScheduler-" />
				<property name="corePoolSize" value="10" />
				<property name="maxPoolSize" value="20" />
				<property name="queueCapacity" value="300" />
				<property name="rejectedExecutionHandler">
					<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
				</property>
			</bean>
		</property>
		<property name="triggers">
			<array>
				<bean id="lowPaymentJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="lowPaymentJob" />
					<property name="cronExpression" value="0 0/1 * * * ?" />
					<property name="startDelay" value="2000" />
					<property name="group" value="PAYMENT" />
				</bean>
				<bean id="highPaymentJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="highPaymentJob" />
					<property name="cronExpression" value="0 0/1 * * * ?" />
					<property name="startDelay" value="2000" />
					<property name="group" value="PAYMENT" />
				</bean>
			</array>		
		</property>
	</bean>
</beans>
