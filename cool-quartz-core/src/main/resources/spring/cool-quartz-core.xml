<?xml version="1.0" encoding="utf-8" ?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd" >
	
	<context:property-placeholder location="classpath:application.properties" />
	
	<context:annotation-config></context:annotation-config>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />		
	</bean>
	
	<bean id="paymentScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="classpath:quartz-core.properties" />
		<property name="dataSource" ref="dataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="autoStartup" value="true" />
	</bean>
	
	<bean id="reportScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="classpath:quartz-core.properties" />
		<property name="dataSource" ref="dataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="autoStartup" value="false" />
	</bean>
	
	<!-- Job Monitoring -> exposing the service -->
	<bean id="jobAdminService" class="cool.quartz.admin.QuartzJobAdminService">	
	</bean>
	
	<!-- Beans -->
	<bean id="jobHistoryDao" class="cool.quartz.history.dao.MybatisJobHistoryDao"/>
	<bean id="jobHistoryService" class="cool.quartz.history.service.QuartzJobHistoryService">
		<constructor-arg ref="jobHistoryDao"/>
	</bean>
	
	<!-- Data accessing  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/history/JobHistoryMapper.xml" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>	
	
</beans>